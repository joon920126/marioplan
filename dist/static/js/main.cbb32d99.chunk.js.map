{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","autherFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","Notification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorFirstName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","autherId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAuBeA,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECJZ,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAjBC,eAEhBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAACO,KAAM,2BDKbR,CAlBO,SAACS,GACnB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCACzBJ,EAAMQ,QAAQC,cEChBC,EATQ,WACnB,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,aCoBDf,cARS,SAACoB,GAErB,OADAC,QAAQC,IAAIF,GACN,CACFd,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAIjBjB,CArBA,SAACS,GAAU,IACfH,EAAiBG,EAAjBH,KAAMW,EAAWR,EAAXQ,QACPO,EAAQlB,EAAKmB,IAAKf,EAAAC,EAAAC,cAACc,EAAD,CAAeT,QAASA,IAAaP,EAAAC,EAAAC,cAACe,EAAD,MAC7D,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,aACCW,uBCgBFI,EA1BO,SAACnB,GAAU,IACtBoB,EAAiBpB,EAAjBoB,cACP,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACTgB,GAAeA,EAAcC,IAAI,SAAAC,GAC9B,OACIrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,EAAKE,IACVvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAakB,EAAKG,KAAlC,KACAxB,EAAAC,EAAAC,cAAA,YAAOmB,EAAKI,SACZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVuB,IAAOL,EAAKM,KAAKC,UAAUC,mBCFrDC,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc6B,EAAQC,OACtCjC,EAAAC,EAAAC,cAAA,sBAAc8B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAauB,IAAOM,EAAQI,UAAUR,UAAUS,eCY9DC,EAjBK,SAAAP,GAAgB,IAAdQ,EAAcR,EAAdQ,SACd,OACAvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAIVoC,GAAYA,EAASnB,IAAI,SAAAY,GACtB,OACIhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAY2B,EAAQT,GAAID,IAAKU,EAAQT,IAC3CvB,EAAAC,EAAAC,cAACsC,EAAD,CAAgBR,QAASA,yBCL3CS,mLACO,IAAAC,EACmCC,KAAK5C,MAAtCwC,EADFG,EACEH,SAAU3C,EADZ8C,EACY9C,KAAMuB,EADlBuB,EACkBvB,cACvB,OAAIvB,EAAKmB,IAELf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAaL,SAAUA,KAE3BvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAe1B,cAAeA,OARzBnB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,mBAHlB0C,aA+BTC,cACX1D,YAboB,SAACoB,GAErB,OADAC,QAAQC,IAAIF,GACL,CAGH6B,SAAU7B,EAAMuC,UAAUC,QAAQX,SAClC3C,KAAMc,EAAMG,SAASjB,KACrBuB,cAAeT,EAAMuC,UAAUC,QAAQ/B,iBAO3CgC,2BAAiB,CACb,CAACC,WAAW,WAAYC,QAAQ,CAAC,YAAa,SAC9C,CAACD,WAAW,gBAAiBE,MAAM,EAAGD,QAAQ,CAAC,OAAO,WAJ/CL,CAMbP,GCVF,IAWeO,cACX1D,YAZoB,SAACoB,EAAM6C,GAE3B,IAAMhC,EAAKgC,EAASC,MAAMC,OAAOlC,GAC3BgB,EAAW7B,EAAMuC,UAAUS,KAAKnB,SAEtC,MAAM,CACFP,QAFYO,EAAUA,EAAShB,GAAM,KAGrC3B,KAAMc,EAAMG,SAASjB,QAMzBuD,2BAAiB,CACb,CAACC,WAAY,cAHNJ,CAvCf,SAAwBjD,GAAO,IACnBiC,EAAkBjC,EAAlBiC,QACR,OAD0BjC,EAATH,KACRmB,IAENiB,EAEKhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc6B,EAAQC,OACtCjC,EAAAC,EAAAC,cAAA,SAAI8B,EAAQP,UAEhBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAgB8B,EAAQ2B,gBAAxB,IAA0C3B,EAAQG,gBAClDnC,EAAAC,EAAAC,cAAA,WAAMwB,IAAOM,EAAQI,UAAUR,UAAUS,eAOrDrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,gCApBSF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,sBCJhCuD,6MACFlD,MAAM,CACFmD,MAAO,GACPC,SAAU,MAEdC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKlE,MAAM0E,OAAOR,EAAKvD,gFAElB,IAAAgC,EACqBC,KAAK5C,MAAxB2E,EADFhC,EACEgC,UACP,OAFKhC,EACa9C,KACVmB,IAAYf,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,MAE7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyE,SAAUhC,KAAK4B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQyB,GAAG,QAAQsD,SAAUlC,KAAKoB,gBAElD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,YACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWyB,GAAG,WAAWsD,SAAUlC,KAAKoB,gBAExD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuE,EAAW1E,EAAAC,EAAAC,cAAA,SAAIwE,GAAe,gBAhCtC3B,aAsDNzD,cAbS,SAACoB,GACrB,MAAO,CACHgE,UAAWhE,EAAMd,KAAK8E,UACtB9E,KAAMc,EAAMG,SAASjB,OAIF,SAACL,GACxB,MAAO,CACHkF,OAAQ,SAACK,GAAD,OAAWvF,GRvDJwF,EQuDoBD,ERtDhC,SAACvF,EAAUE,EAAXsC,IACcpC,EADyBoC,EAAjBpC,eAEhBC,OAAOoF,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdjE,KAAK,WACHN,EAAS,CAACO,KAAM,oBACjBmF,MAAM,SAACC,GACN3F,EAAS,CAACO,KAAM,cAAeoF,aATrB,IAACH,KQ2DRzF,CAA6CsE,GCtDtDuB,6MACFzE,MAAM,CACFmD,MAAO,GACPC,SAAU,GACVsB,UAAW,GACXC,SAAU,MAEdtB,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKlE,MAAMuF,OAAOrB,EAAKvD,gFAElB,IAAAgC,EACqBC,KAAK5C,MAAxBH,EADF8C,EACE9C,KAAM8E,EADRhC,EACQgC,UACb,OAAG9E,EAAKmB,IAAYf,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,MAE7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyE,SAAUhC,KAAK4B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQyB,GAAG,QAAQsD,SAAUlC,KAAKoB,gBAElD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,YACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWyB,GAAG,WAAWsD,SAAUlC,KAAKoB,gBAExD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,aAAf,cACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,YAAYsD,SAAUlC,KAAKoB,gBAErD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,aACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,WAAWsD,SAAUlC,KAAKoB,gBAEpD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuE,EAAW1E,EAAAC,EAAAC,cAAA,SAAIwE,GAAiB,gBA1CxC3B,aAgENzD,cAbS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMG,SAASjB,KACrB8E,UAAWhE,EAAMd,KAAK8E,YAIH,SAACnF,GACxB,MAAO,CACH+F,OAAQ,SAACC,GAAD,OAAahG,ET1CP,SAACgG,GACnB,OAAO,SAAChG,EAAUE,EAAX+F,GAAqD,IAA/B7F,EAA+B6F,EAA/B7F,YAAa8F,EAAkBD,EAAlBC,aAChC5E,EAAWlB,IACXsD,EAAYwC,IAClB5E,EAASjB,OAAO8F,+BACZH,EAAQ1B,MACR0B,EAAQzB,UACVjE,KAAK,SAAC8F,GACJ,OAAO1C,EAAUG,WAAW,SAASwC,IAAID,EAAKnE,KAAKT,KAAK8E,IAAI,CACxDT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB7E,SAAU+E,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAEvDxF,KAAK,WACJN,EAAS,CAACO,KAAK,qBAChBmF,MAAM,SAAAC,GACL3F,EAAS,CAACO,KAAK,eAAgBoF,WS0BLI,CAAOC,OAI9BjG,CAA6C6F,WChEtDW,6MACFpF,MAAM,CACFuB,MAAO,GACPR,QAAS,MAEbsC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAMhCC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKlE,MAAMgG,cAAc9B,EAAKvD,OAC9BuD,EAAKlE,MAAMiG,QAAQC,KAAK,8EAIxB,OADetD,KAAK5C,MAAbH,KACEmB,IAELf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyE,SAAUhC,KAAK4B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,QAAQsD,SAAUlC,KAAKoB,gBAEjD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,WAAf,mBACA5E,EAAAC,EAAAC,cAAA,YAAUqB,GAAG,UAAUpB,UAAU,uBAAuB0E,SAAUlC,KAAKoB,gBAE3E/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAdKH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,mBApBd0C,aA2DbzD,cAXS,SAACoB,GACrB,MAAQ,CACJd,KAAMc,EAAMG,SAASjB,OAGF,SAACL,GACxB,MAAO,CACHwG,cAAe,SAAC/D,GAAD,OAAazC,EC5DP,SAACyC,GAM1B,OAAO,SAACzC,EAAUE,EAAXsC,GAAqDA,EAA/BpC,YAA+B,IAClDsD,GAAYwC,EADsC1D,EAAlB0D,gBAEhClF,EAAUd,IAAWoB,SAASN,QAC9B2F,EAAWzG,IAAWoB,SAASjB,KAAKmB,IAC1CkC,EAAUG,WAAW,YAAY+C,IAAjChC,OAAAiC,EAAA,EAAAjC,CAAA,GAKMnC,EALN,CAMGE,gBAAiB3B,EAAQ6E,UACzBjD,eAAgB5B,EAAQ8E,SACxBa,SAAUA,EACV9D,UAAW,IAAIiE,QACfxG,KAAK,WAKJN,EAAS,CAACO,KAAK,iBAAkBkC,cAClCiD,MAAM,SAACC,GAEN3F,EAAS,CAACO,KAAM,uBAAwBoF,WDgCPa,CAAc/D,OAI5C1C,CAA6CwG,GEnC7CQ,mLAlBT,OACEtG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO0D,OAAK,EAACC,KAAK,IAAIC,UAAWjE,IACjCzC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,eAAeC,UAAWC,IACtC3G,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAW9C,IACjC5D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAWvB,IACjCnF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAWZ,cAX7B/C,aCGE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2DClBN,IAAMwD,EAAY,CACdtC,UAAW,MAqCAuC,EAnCK,WAA+B,IAA9BvG,EAA8BwG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAOC,EAAOvH,MACV,IAAK,cAED,OADAa,QAAQC,IAAI,eACLuD,OAAAiC,EAAA,EAAAjC,CAAA,GACAzD,EADP,CAEIgE,UAAW,iBAEnB,IAAK,gBAED,OADA/D,QAAQC,IAAI,iBACLuD,OAAAiC,EAAA,EAAAjC,CAAA,GACAzD,EADP,CAEIgE,UAAW,OAEnB,IAAK,kBAED,OADA/D,QAAQC,IAAI,mBACL,CACHF,SAER,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACLuD,OAAAiC,EAAA,EAAAjC,CAAA,GACAzD,EADP,CAEIgE,UAAW,OAEnB,IAAK,eAED,OADA/D,QAAQC,IAAI,gBACZuD,OAAAiC,EAAA,EAAAjC,CAAA,GACOzD,EADP,CAEIgE,UAAW2C,EAAOnC,IAAIoC,UAE9B,QAAS,OAAO5G,IClClBsG,EAAY,CACdzE,SAAU,CACN,CAAChB,GAAI,IAAKU,MAAO,qBAAsBR,QAAS,kBAChD,CAACF,GAAI,IAAKU,MAAO,wBAAyBR,QAAS,kBACnD,CAACF,GAAI,IAAKU,MAAO,sBAAuBR,QAAS,oBAgB1C8F,EAbQ,WAA+B,IAA9B7G,EAA8BwG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOvH,MACX,IAAK,iBAED,OADAa,QAAQC,IAAI,kBAAmByG,EAAOrF,SAC/BtB,EACX,IAAK,uBAED,OADAC,QAAQC,IAAI,uBAAwByG,EAAOnC,KACpCxE,EACX,QACI,OAAOA,YCHJ8G,EAPKC,YAAgB,CAChC7H,KAAMqH,EACNjF,QAASuF,EACTtE,UAAWyE,mBACX7G,SAAU8G,4DCKZ9G,IAAS+G,cAXU,CACjBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCAKTtH,IAASoC,YAAYmF,SAAS,CAACC,uBAAsB,IAExCxH,QAAf,ECJMyH,EAAQC,YAAYf,EACtBxE,YACIwF,YAAgBC,IAAMC,kBAAkB,CAAC/I,0BAAa8F,+BACtDkD,yBAAeC,GACfC,6BAAmBD,EAAU,CAACE,wBAAwB,EAAMC,YAAY,QAASC,mBAAmB,MAG5GV,EAAMW,oBAAoBpJ,KAAK,WAC3BqJ,IAASC,OAAOnJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAUd,MAAOA,GAAOtI,EAAAC,EAAAC,cAACmJ,EAAD,OAAoBC,SAASC,eAAe,SL2GlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7J,KAAK,SAAA8J,GACjCA,EAAaC","file":"static/js/main.cbb32d99.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase() \n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type:'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const {auth, profile} = props\n    const links = auth.uid? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notification\">\n                        {notifications&&notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.autherFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    ) \n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n        return(\n        <div className=\"project-list section\">\n            {/** projects &&를 맵 앞에 붙이는 이유는\n                &&이 지닌 특성, 즉 앞의 것이 false라면 뒤의 연산은 아예 실행하지 않는 것을\n                응용한 것. 만약 project가 존재하지 않아 false가 나온다면 매핑 자체를 실행하지 않는다 */}\n            {projects && projects.map(project=>{\n                return(\n                    <Link to={'/project/'+project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notification'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component{\n    render() {\n        const {projects, auth, notifications} = this.props;\n        if(!auth.uid) return <Redirect to='/signin'/> \n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>  \n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>                    \n                </div>  \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => { //스토어의 state를 받아 이 컴포넌트의 props로 내보냄\n    console.log(state)\n    return {\n        //rootreducer의 project(projectReducer) 내의 projects 프로퍼티\n        //projects: state.project.projects\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects', orderBy:['createdAt', 'desc']},\n        {collection:'notifications', limit:3, orderBy:['time','desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props\n    if(!auth.uid) return <Redirect to='/signin'/>\n\n    if(project){\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,ownProps) => {\n    //console.log(state)\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects? projects[id] : null\n    return{\n        project: project, \n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state={\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n    render() {\n        const {authError, auth} = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-fidle\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError? <p>{authError}</p>:null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import { Redirect } from 'react-router-dom'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions' \n\nclass SignUp extends Component {\n    state={\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n    render() {\n        const {auth, authError} = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-fidle\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state={\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    /**1. submit 클릭시 this.props에 있는 createProject 호출하고 this.state를 인자로 집어넣음\n     * props는 아래의 mapDispatchToProps로 인해 생성됨?\n    */\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    render() {\n        const {auth} = this.props\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-fidle\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n/**2. dispatch를 받고 자바스크립트 오브젝트 반환하는데 이 오브젝트는 createProject라는 속성을 가지고 있음\n * 3. createProject는 project라는 인자를 받아 맨 위에서 받은 dispatch 함수(?)를 실행하는 함수 형태의 속성\n * 4. dispatch함수의 인자로는 projectActions에서 import해온 createProject라는 함수가 들어감\n * 5. createProject함수는 createProject속성에서 인자로 받은 project인자를 받아 실행\n */\n\nconst mapStateToProps = (state) => {\n    return  {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n//connect에서 어찌저찌해서 mapDispatchToProps로 props를 만들어서 createProject를 리덕스로 연결?\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    /**파이어베이스와 파이어스토어를 받아 상호작용이 가능해짐 */\n    /**6. 호출된 createProject는 this.state를 받아 새 함수를 반환\n     * 프로젝트를 받아 getFirestore를 이용해 데이터베이스에 프로젝트를 저장하고 나서\n     * action을 dispatch한다\n     */\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore()//getFirestore를 초기화하고 결과물을 const로 저장해 db로의 레퍼런스 마련\n        const profile = getState().firebase.profile\n        const autherId = getState().firebase.auth.uid\n        firestore.collection('projects').add({//firestore의 projects컬렉션에 오브젝트 추가.\n            //이 오브젝트는 컬렉션에 추가할 document를 나타냄\n            /**this.state가 mapDispatchToProps의 createProject의 project로 패스돼서\n             * 이 createProject의 project에 title과 content가 있음\n            */\n           ...project,\n           autherFirstName: profile.firstName,\n           authorLastName: profile.lastName,\n           autherId: autherId,\n           createdAt: new Date()\n        }).then(() => {\n            /**dispatch는 db에 위 문서가 올라가기 전까지 실행되지 않아야 함\n             * add는 시간이 좀 걸리기 때문에 promise를 하나 반환함\n             * .then으로 묶어주면 기다렸다가 add 끝나고 나서 실행함\n             */\n            dispatch({type:'CREATE_PROJECT', project})\n        }).catch((err) => {\n            /**add가 어떤 에러로 인해 끝나지 못할 경우를 캐치해줌 */\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        })\n    }\n}","import React, {Component} from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar/>\n            <Switch>\n              <Route exact path='/' component={Dashboard}/>\n              <Route path='/project/:id' component={ProjectDetails}/>\n              <Route path='/signin' component={SignIn}/>\n              <Route path='/signup' component={SignUp}/>\n              <Route path='/create' component={CreateProject}/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return {\n                state\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default: return state\n    }       \n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n}\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project)\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state\n        default:\n            return state \n    }\n} \n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport {firestoreReducer} from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n \nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer, \n    firebase: firebaseReducer \n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDEKBwzqa8nJds8Adfknrme5_xtJ0wfUGk\",\n    authDomain: \"marioplan-d6b73.firebaseapp.com\",\n    databaseURL: \"https://marioplan-d6b73.firebaseio.com\",\n    projectId: \"marioplan-d6b73\",\n    storageBucket: \"\",\n    messagingSenderId: \"610328080457\",\n    appId: \"1:610328080457:web:d9e1e9387f56a5e5\"\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots:true})\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig';\n\n//파이어베이스/파이어스토어 api를 함수 안에서 적용할 수 있게 인자로 getFirebase getFirestore를 넣어준다\nconst store = createStore(rootReducer,\n    compose(//미들웨어와 store enhancer들을 compose해 두개를 연결시킬 수 있음\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig), //config를 인자로 집어넣어야\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true}) //createProject에서 연결할 프로젝트를 인식할 수 있음\n        )\n)\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}